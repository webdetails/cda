<?xml version="1.0" encoding="UTF-8"?>
<blueprint xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
           xmlns:cxf="http://cxf.apache.org/blueprint/core"
           xmlns:jaxrs="http://cxf.apache.org/blueprint/jaxrs"
           xmlns:ext="http://aries.apache.org/blueprint/xmlns/blueprint-ext/v1.0.0"
           xmlns="http://www.osgi.org/xmlns/blueprint/v1.0.0"
           xsi:schemaLocation="http://www.osgi.org/xmlns/blueprint/v1.0.0
                               http://www.osgi.org/xmlns/blueprint/v1.0.0/blueprint.xsd
                                http://cxf.apache.org/blueprint/core
                               http://cxf.apache.org/blueprint/jaxrs
                               http://cxf.apache.org/schemas/blueprint/jaxrs.xsd">

   <!--Gain access to files available in bundles through CPF IReadAccess -->
  <service interface="pt.webdetails.cpf.repository.api.IReadAccess">
    <service-properties>
      <entry key="pluginId" value="cda"/>
    </service-properties>
    <bean class="org.pentaho.ctools.cpf.repository.bundle.ReadAccess">
      <property name="bundle" ref="blueprintBundle"/>
    </bean>
  </service>

  <!-- Load system property -->
  <ext:property-placeholder />

  <bean id="contentAccessFactory" class="org.pentaho.ctools.cpf.repository.factory.ContentAccessFactory">
    <!--<argument value="${storage.path}"/>-->
    <argument value="cda"/>
  </bean>

  <reference-list interface="pt.webdetails.cpf.repository.api.IReadAccess" availability="optional" >
    <reference-listener ref="contentAccessFactory" bind-method="addReadAccess" unbind-method="removeReadAccess"/>
  </reference-list>

  <reference interface="pt.webdetails.cpf.api.IUserContentAccessExtended" availability="optional">
    <reference-listener ref="contentAccessFactory" bind-method="setUserContentAccess" unbind-method="removeUserContentAccess"/>
  </reference>


  <bean id="cdaEnvironment" class="org.pentaho.ctools.cda.CdaEnvironment" scope="singleton" init-method="init">
    <!--region Dummy support classes-->
    <property name="eventPublisher">
      <bean class="org.pentaho.ctools.cda.messaging.EventPublisher"/>
    </property>
    <property name="mondrianRoleMapper">
      <bean class="org.pentaho.ctools.cda.connections.mondrian.MondrianRoleMapper"/>
    </property>
    <!--endregion-->
    <property name="repo" ref="contentAccessFactory"/>

    <!--region Default values from BaseCdaEnvironment -->
    <property name="cubeFileProviderSetter">
      <bean class="pt.webdetails.cda.dataaccess.DefaultCubeFileProviderSetter"/>
    </property>
    <property name="dataAccessUtils">
      <!--<bean class="pt.webdetails.cda.dataaccess.DefaultDataAccessUtils"/>-->
      <bean class="pt.webdetails.cda.dataaccess.DefaultDataAccessUtils">
        <argument value="${repos.repoName}"/>
        <argument value="${repos.user}"/>
        <argument value="${repos.password}"/>
      </bean>
    </property>
    <property name="formulaContext">
      <bean class="org.pentaho.reporting.libraries.formula.DefaultFormulaContext"/>
    </property>
    <!--endregion-->

    <!-- Slightly changed import from data services in cda-pentaho -->
    <property name="dataservicesLocalConnection">
      <bean class="org.pentaho.ctools.cda.connections.dataservices.DataservicesLocalConnection">
        <argument>
          <bean class="org.pentaho.ctools.cda.connections.dataservices.DataservicesDriverLocalConnectionProvider"/>
        </argument>
      </bean>
    </property>

    <property name="queryCache">
      <!--
      <bean class="pt.webdetails.cda.cache.EHCacheQueryCache" depends-on="dummyBeanForCdaEngineInit">
        <argument type="boolean" value="false"/>
      </bean>
      -->
      <bean class="org.pentaho.ctools.cda.cache.NoCache"/>
    </property>

  </bean>

  <!-- Trying to set the cdaEnvironment of the CdaEngine via factory-method even if it returns void -->
  <bean id="dummyBeanForCdaEngineInit" class="pt.webdetails.cda.CdaEngine" factory-method="init">
    <argument ref="cdaEnvironment"/>
  </bean>

  <bean id="dataFactoryRegister" class="org.pentaho.ctools.cda.DataFactoryRegister" init-method="init">
    <argument ref="dummyBeanForCdaEngineInit"/>
  </bean>

  <jaxrs:server address="/cda" id="cdaService">
    <jaxrs:serviceBeans>
      <bean class="pt.webdetails.cda.endpoints.RestEndpoint"/>
    </jaxrs:serviceBeans>
  </jaxrs:server>

  <service id="jettyWebSocketServlet" interface="javax.servlet.Servlet">
    <service-properties>
      <entry key="alias" value="/cda/websocket/query" />
      <entry key="servlet-name" value="CDA Jetty WebSocket Servlet" />
    </service-properties>

    <bean class="org.pentaho.ctools.cda.endpoints.CdaJettyWebSocketServlet" />
  </service>

</blueprint>
